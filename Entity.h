#pragma once

#include <string>

#include "CommonTypes.h"

class Vec3;
class AABB;
class Vec2;

class Entity {
public: 
	virtual ~Entity();
	virtual void _postInit();
	virtual void reset();
	virtual void getOwnerEntityType();
	virtual void remove();
	virtual void setPos(Vec3 const &);
	virtual void getPos();
	virtual void getPosOld();
	virtual void getPosExtrapolated(float);
	virtual void getVelocity();
	virtual void move(Vec3 const &);
	virtual void checkBlockCollisions(AABB const &);
	virtual void checkBlockCollisions();
	virtual void moveRelative(float, float, float);
	virtual void lerpTo(Vec3 const &, Vec2 const &, int);
	virtual void lerpMotion(Vec3 const &);
	virtual void turn(Vec2 const &, bool);
	virtual void interpolateTurn(Vec2 const &);
	virtual void getAddPacket();
	virtual void normalTick();
	virtual void baseTick();
	virtual void rideTick();
	virtual void positionRider(Entity &);
	virtual void getRidingHeight();
	virtual void getRideHeight();
	virtual void startRiding(Entity &);
	virtual void addRider(Entity &);
	virtual void removeRider(Entity &);
	virtual void intersects(Vec3 const &, Vec3 const &);
	virtual void isFree(Vec3 const &, float);
	virtual void isFree(Vec3 const &);
	virtual void isInWall();
	virtual void isInvisible();
	virtual void canShowNameTag();
	virtual void setNameTagVisible(bool);
	virtual void getNameTag();
	virtual void setNameTag(std::string const &);
	virtual bool isInWater();
	virtual bool isInWaterOrRain();
	virtual bool isInLava();
	virtual bool isBaby();
	virtual void isUnderLiquid(MaterialType);
	virtual void makeStuckInWeb();
	virtual void getHeadHeight();
	virtual void getShadowHeightOffs();
	virtual void getShadowRadius();
	virtual void isSkyLit(float);
	virtual void getBrightness(float);
	virtual void interactPreventDefault();
	virtual void interactWithPlayer(Player &);
	virtual void canInteractWith(Player &);
	virtual void getInteractText(Player &);
	virtual void playerTouch(Player &);
	virtual void push(Entity &, bool);
	virtual void push(Vec3 const &);
	virtual void isImmobile();
	virtual void isSilent();
	virtual void isPickable();
	virtual void isPushable();
	virtual void isPushableByPiston();
	virtual void isShootable();
	virtual void isSneaking();
	virtual void isAlive();
	virtual void isOnFire();
	virtual void isCreativeModeAllowed();
	virtual void isSurfaceMob();
	virtual void hurt(EntityDamageSource const &, int);
	virtual void animateHurt();
	virtual void doFireHurt(int);
	virtual void onLightningHit();
	virtual void onBounceStarted(BlockPos const &, FullBlock const &);
	virtual void handleEntityEvent(EntityEvent, int);
	virtual void getPickRadius();
	virtual void spawnAtLocation(int, int);
	virtual void spawnAtLocation(int, int, float);
	virtual void spawnAtLocation(FullBlock, int);
	virtual void spawnAtLocation(FullBlock, int, float);
	virtual void spawnAtLocation(ItemInstance const &, float);
	virtual void awardKillScore(Entity &, int);
	virtual void setEquippedSlot(ArmorSlot, int, int);
	virtual void setEquippedSlot(ArmorSlot, ItemInstance const &);
	virtual void save(CompoundTag &);
	virtual void saveWithoutId(CompoundTag &);
	virtual void load(CompoundTag const &);
	virtual void loadLinks(CompoundTag const &, std::vector<EntityLink> &);
	virtual void getEntityTypeId() = 0;
	virtual void queryEntityRenderer();
	virtual void getSourceUniqueID();
	virtual void setOnFire(int);
	virtual void getHandleWaterAABB();
	virtual void handleInsidePortal(BlockPos const &);
	virtual void getPortalCooldown();
	virtual void getPortalWaitTime();
	virtual void getDimensionId();
	virtual void changeDimension(DimensionId);
	virtual void changeDimension(ChangeDimensionPacket &);
	virtual void getControllingPlayer();
	virtual void checkFallDamage(float, bool);
	virtual void causeFallDamage(float);
	virtual void playSound(std::string const &, float, float, EntityLocation);
	virtual void onSynchedDataUpdate(int);
	virtual void canAddRider(Entity &);
	virtual void canBeLeashed();
	virtual void isLeashableType();
	virtual void tickLeash();
	virtual void getEyeHeight();
	virtual void sendMotionPacketIfNeeded();
	virtual void stopRiding(bool, bool);
	virtual void buildDebugInfo(std::string &);
	virtual void openContainerComponent(Player &);
	virtual void hasOutputSignal(signed char);
	virtual void getOutputSignal();
	virtual void getDebugText(std::vector<std::string, std::allocator<std::string> > &);
	virtual void setSize(float, float);
	virtual void setPos(EntityPos const &);
	virtual void outOfWorld();
	virtual void markHurt();
	virtual void burn(int, bool);
	virtual void lavaHurt();
	//virtual void __imp___cxa_pure_virtual;
	//virtual void __imp___cxa_pure_virtual;
	virtual void _playStepSound(BlockPos const &, int);
	virtual void checkInsideBlocks(float);
	virtual void pushOutOfBlocks(Vec3 const &);
	virtual void updateWaterState();
	virtual void doWaterSplashEffect();
	virtual void updateInsideBlock();
	virtual void onBlockCollision(int);
};